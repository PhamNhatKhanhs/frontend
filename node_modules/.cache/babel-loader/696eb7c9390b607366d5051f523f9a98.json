{"ast":null,"code":"// Actions to register\nexport const register = (name, email, password, dob, address) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Make post request to register with additional fields\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password,\n      dob,\n      address\n    }, config);\n\n    // Dispatch register\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n\n    // Auto login after registration\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    // Set user to local storage\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["register","name","email","password","dob","address","dispatch","type","USER_REGISTER_REQUEST","config","headers","data","axios","post","USER_REGISTER_SUCCESS","payload","USER_LOGIN_SUCCESS","localStorage","setItem","JSON","stringify","error","USER_REGISTER_FAIL","response","message"],"sources":["D:/Download/baitaplon/frontend/src/actions/userActions.js"],"sourcesContent":["// Actions to register\nexport const register = (name, email, password, dob, address) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        // Make post request to register with additional fields\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, password, dob, address },\n            config\n        );\n\n        // Dispatch register\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        });\n\n        // Auto login after registration\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        // Set user to local storage\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,OAAO,KAAK,MAAOC,QAAQ,IAAK;EACjF,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEC;IAAsB,CAAC,CAAC;IAEzC,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;;IAED;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACC,IAAI,CAC7B,YAAY,EACZ;MAAEZ,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,GAAG;MAAEC;IAAQ,CAAC,EACvCI,MACJ,CAAC;;IAED;IACAH,QAAQ,CAAC;MACLC,IAAI,EAAEO,qBAAqB;MAC3BC,OAAO,EAAEJ;IACb,CAAC,CAAC;;IAEF;IACAL,QAAQ,CAAC;MACLC,IAAI,EAAES,kBAAkB;MACxBD,OAAO,EAAEJ;IACb,CAAC,CAAC;;IAEF;IACAM,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOU,KAAK,EAAE;IACZf,QAAQ,CAAC;MACLC,IAAI,EAAEe,kBAAkB;MACxBP,OAAO,EACHM,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACZ,IAAI,CAACa,OAAO,GACvCH,KAAK,CAACE,QAAQ,CAACZ,IAAI,CAACa,OAAO,GAC3BH,KAAK,CAACG;IACpB,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}