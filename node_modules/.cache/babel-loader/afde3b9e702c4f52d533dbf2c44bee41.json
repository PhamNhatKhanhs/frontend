{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\baitaplon\\\\frontend\\\\src\\\\screens\\\\AdminAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Import axios để gọi API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminAnalytics = () => {\n  _s();\n  const [data, setData] = useState({\n    sales: [],\n    // Weekly sales\n    orders: [],\n    // Weekly orders\n    inventory: [],\n    // Inventory levels\n    customerHistory: [],\n    // Customer purchase history\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // Default labels\n  });\n  useEffect(() => {\n    const fetchAnalyticsData = async () => {\n      try {\n        // Gọi API để lấy dữ liệu tồn kho\n        const inventoryRes = await axios.get('/api/products/inventory');\n        const inventoryData = inventoryRes.data.map(item => item.countInStock); // Lấy số lượng tồn\n\n        // Gọi API để lấy lịch sử mua hàng\n        const customerId = 'ID_CUA_USER'; // Thay bằng ID người dùng thực tế\n        const customerHistoryRes = await axios.get(`/api/orders/customer-history/${customerId}`);\n        const customerHistoryData = customerHistoryRes.data.map(order => ({\n          date: order.createdAt.split('T')[0],\n          // Lấy ngày từ thời gian\n          total: order.totalPrice // Tổng giá trị đơn hàng\n        }));\n\n        // Cập nhật state với dữ liệu mới\n        setData(prevData => ({\n          ...prevData,\n          inventory: inventoryData,\n          customerHistory: customerHistoryData\n        }));\n      } catch (error) {\n        console.error('Error fetching analytics data:', error);\n      }\n    };\n    fetchAnalyticsData();\n\n    // Demo sales and orders (mock nếu cần)\n    setData(prevData => ({\n      ...prevData,\n      sales: [200, 400, 300, 700, 500, 800, 600],\n      // Sales giả lập\n      orders: [10, 20, 15, 30, 25, 35, 40] // Orders giả lập\n    }));\n  }, []);\n\n  // Phần còn lại của mã không thay đổi\n  useEffect(() => {\n    // Draw Sales Chart\n    const salesCanvas = document.getElementById('salesChart');\n    const salesCtx = salesCanvas.getContext('2d');\n    salesCtx.clearRect(0, 0, salesCanvas.width, salesCanvas.height);\n    drawBarChart(salesCtx, data.sales, data.labels, 'Sales');\n\n    // Draw Orders Chart\n    const ordersCanvas = document.getElementById('ordersChart');\n    const ordersCtx = ordersCanvas.getContext('2d');\n    ordersCtx.clearRect(0, 0, ordersCanvas.width, ordersCanvas.height);\n    drawLineChart(ordersCtx, data.orders, data.labels, 'Orders');\n\n    // Draw Inventory Chart\n    const inventoryCanvas = document.getElementById('inventoryChart');\n    const inventoryCtx = inventoryCanvas.getContext('2d');\n    inventoryCtx.clearRect(0, 0, inventoryCanvas.width, inventoryCanvas.height);\n    drawBarChart(inventoryCtx, data.inventory, data.labels, 'Inventory');\n  }, [data]);\n  const drawBarChart = (ctx, dataset, labels, label) => {\n    const maxVal = Math.max(...dataset);\n    const canvasWidth = ctx.canvas.width;\n    const canvasHeight = ctx.canvas.height;\n    const barWidth = canvasWidth / dataset.length - 20;\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#333';\n    ctx.textAlign = 'center';\n    dataset.forEach((value, index) => {\n      const barHeight = value / maxVal * (canvasHeight - 50);\n      const x = index * (barWidth + 20) + 20;\n      const y = canvasHeight - barHeight;\n      ctx.fillStyle = '#ffc107';\n      ctx.fillRect(x, y, barWidth, barHeight);\n      ctx.fillStyle = '#333';\n      ctx.fillText(value, x + barWidth / 2, y - 10);\n      ctx.fillText(labels[index], x + barWidth / 2, canvasHeight - 10);\n    });\n  };\n  const drawLineChart = (ctx, dataset, labels, label) => {\n    const maxVal = Math.max(...dataset);\n    const canvasWidth = ctx.canvas.width;\n    const canvasHeight = ctx.canvas.height;\n    const pointSpacing = canvasWidth / (dataset.length - 1);\n    ctx.beginPath();\n    ctx.strokeStyle = '#17a2b8';\n    ctx.lineWidth = 2;\n    dataset.forEach((value, index) => {\n      const x = index * pointSpacing;\n      const y = canvasHeight - value / maxVal * (canvasHeight - 50);\n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    });\n    ctx.stroke();\n    ctx.fillStyle = '#333';\n    ctx.textAlign = 'center';\n    dataset.forEach((value, index) => {\n      const x = index * pointSpacing;\n      const y = canvasHeight - value / maxVal * (canvasHeight - 50);\n      ctx.beginPath();\n      ctx.arc(x, y, 5, 0, Math.PI * 2);\n      ctx.fillStyle = '#17a2b8';\n      ctx.fill();\n      ctx.fillStyle = '#333';\n      ctx.fillText(value, x, y - 10);\n      ctx.fillText(labels[index], x, canvasHeight - 10);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f4f4f9'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333',\n        marginBottom: '30px'\n      },\n      children: \"Th\\u1ED1ng K\\xEA Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminAnalytics, \"3nTpyeT36aNXUEm7lMsPkNorCFw=\");\n_c = AdminAnalytics;\nexport default AdminAnalytics;\nvar _c;\n$RefreshReg$(_c, \"AdminAnalytics\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AdminAnalytics","_s","data","setData","sales","orders","inventory","customerHistory","labels","fetchAnalyticsData","inventoryRes","get","inventoryData","map","item","countInStock","customerId","customerHistoryRes","customerHistoryData","order","date","createdAt","split","total","totalPrice","prevData","error","console","salesCanvas","document","getElementById","salesCtx","getContext","clearRect","width","height","drawBarChart","ordersCanvas","ordersCtx","drawLineChart","inventoryCanvas","inventoryCtx","ctx","dataset","label","maxVal","Math","max","canvasWidth","canvas","canvasHeight","barWidth","length","font","fillStyle","textAlign","forEach","value","index","barHeight","x","y","fillRect","fillText","pointSpacing","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","arc","PI","fill","style","padding","fontFamily","backgroundColor","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Download/baitaplon/frontend/src/screens/AdminAnalytics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'; // Import axios để gọi API\r\n\r\nconst AdminAnalytics = () => {\r\n  const [data, setData] = useState({\r\n    sales: [], // Weekly sales\r\n    orders: [], // Weekly orders\r\n    inventory: [], // Inventory levels\r\n    customerHistory: [], // Customer purchase history\r\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'], // Default labels\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchAnalyticsData = async () => {\r\n      try {\r\n        // Gọi API để lấy dữ liệu tồn kho\r\n        const inventoryRes = await axios.get('/api/products/inventory');\r\n        const inventoryData = inventoryRes.data.map((item) => item.countInStock); // Lấy số lượng tồn\r\n\r\n        // Gọi API để lấy lịch sử mua hàng\r\n        const customerId = 'ID_CUA_USER'; // Thay bằng ID người dùng thực tế\r\n        const customerHistoryRes = await axios.get(\r\n          `/api/orders/customer-history/${customerId}`\r\n        );\r\n        const customerHistoryData = customerHistoryRes.data.map((order) => ({\r\n          date: order.createdAt.split('T')[0], // Lấy ngày từ thời gian\r\n          total: order.totalPrice, // Tổng giá trị đơn hàng\r\n        }));\r\n\r\n        // Cập nhật state với dữ liệu mới\r\n        setData((prevData) => ({\r\n          ...prevData,\r\n          inventory: inventoryData,\r\n          customerHistory: customerHistoryData,\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error fetching analytics data:', error);\r\n      }\r\n    };\r\n\r\n    fetchAnalyticsData();\r\n\r\n    // Demo sales and orders (mock nếu cần)\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      sales: [200, 400, 300, 700, 500, 800, 600], // Sales giả lập\r\n      orders: [10, 20, 15, 30, 25, 35, 40], // Orders giả lập\r\n    }));\r\n  }, []);\r\n\r\n  // Phần còn lại của mã không thay đổi\r\n  useEffect(() => {\r\n    // Draw Sales Chart\r\n    const salesCanvas = document.getElementById('salesChart');\r\n    const salesCtx = salesCanvas.getContext('2d');\r\n    salesCtx.clearRect(0, 0, salesCanvas.width, salesCanvas.height);\r\n    drawBarChart(salesCtx, data.sales, data.labels, 'Sales');\r\n\r\n    // Draw Orders Chart\r\n    const ordersCanvas = document.getElementById('ordersChart');\r\n    const ordersCtx = ordersCanvas.getContext('2d');\r\n    ordersCtx.clearRect(0, 0, ordersCanvas.width, ordersCanvas.height);\r\n    drawLineChart(ordersCtx, data.orders, data.labels, 'Orders');\r\n\r\n    // Draw Inventory Chart\r\n    const inventoryCanvas = document.getElementById('inventoryChart');\r\n    const inventoryCtx = inventoryCanvas.getContext('2d');\r\n    inventoryCtx.clearRect(0, 0, inventoryCanvas.width, inventoryCanvas.height);\r\n    drawBarChart(inventoryCtx, data.inventory, data.labels, 'Inventory');\r\n  }, [data]);\r\n\r\n  const drawBarChart = (ctx, dataset, labels, label) => {\r\n    const maxVal = Math.max(...dataset);\r\n    const canvasWidth = ctx.canvas.width;\r\n    const canvasHeight = ctx.canvas.height;\r\n    const barWidth = canvasWidth / dataset.length - 20;\r\n\r\n    ctx.font = '16px Arial';\r\n    ctx.fillStyle = '#333';\r\n    ctx.textAlign = 'center';\r\n\r\n    dataset.forEach((value, index) => {\r\n      const barHeight = (value / maxVal) * (canvasHeight - 50);\r\n      const x = index * (barWidth + 20) + 20;\r\n      const y = canvasHeight - barHeight;\r\n\r\n      ctx.fillStyle = '#ffc107';\r\n      ctx.fillRect(x, y, barWidth, barHeight);\r\n\r\n      ctx.fillStyle = '#333';\r\n      ctx.fillText(value, x + barWidth / 2, y - 10);\r\n      ctx.fillText(labels[index], x + barWidth / 2, canvasHeight - 10);\r\n    });\r\n  };\r\n\r\n  const drawLineChart = (ctx, dataset, labels, label) => {\r\n    const maxVal = Math.max(...dataset);\r\n    const canvasWidth = ctx.canvas.width;\r\n    const canvasHeight = ctx.canvas.height;\r\n    const pointSpacing = canvasWidth / (dataset.length - 1);\r\n\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = '#17a2b8';\r\n    ctx.lineWidth = 2;\r\n\r\n    dataset.forEach((value, index) => {\r\n      const x = index * pointSpacing;\r\n      const y = canvasHeight - (value / maxVal) * (canvasHeight - 50);\r\n\r\n      if (index === 0) {\r\n        ctx.moveTo(x, y);\r\n      } else {\r\n        ctx.lineTo(x, y);\r\n      }\r\n    });\r\n\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = '#333';\r\n    ctx.textAlign = 'center';\r\n\r\n    dataset.forEach((value, index) => {\r\n      const x = index * pointSpacing;\r\n      const y = canvasHeight - (value / maxVal) * (canvasHeight - 50);\r\n\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 5, 0, Math.PI * 2);\r\n      ctx.fillStyle = '#17a2b8';\r\n      ctx.fill();\r\n\r\n      ctx.fillStyle = '#333';\r\n      ctx.fillText(value, x, y - 10);\r\n      ctx.fillText(labels[index], x, canvasHeight - 10);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif', backgroundColor: '#f4f4f9' }}>\r\n      {/* UI không thay đổi */}\r\n      <h1 style={{ textAlign: 'center', color: '#333', marginBottom: '30px' }}>Thống Kê Admin</h1>\r\n      {/* Các phần khác */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAnalytics;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,KAAK,EAAE,EAAE;IAAE;IACXC,MAAM,EAAE,EAAE;IAAE;IACZC,SAAS,EAAE,EAAE;IAAE;IACfC,eAAe,EAAE,EAAE;IAAE;IACrBC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAE;EAC7D,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACd,MAAMc,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF;QACA,MAAMC,YAAY,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,yBAAyB,CAAC;QAC/D,MAAMC,aAAa,GAAGF,YAAY,CAACR,IAAI,CAACW,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC;;QAE1E;QACA,MAAMC,UAAU,GAAG,aAAa,CAAC,CAAC;QAClC,MAAMC,kBAAkB,GAAG,MAAMpB,KAAK,CAACc,GAAG,CACxC,gCAAgCK,UAAU,EAC5C,CAAC;QACD,MAAME,mBAAmB,GAAGD,kBAAkB,CAACf,IAAI,CAACW,GAAG,CAAEM,KAAK,KAAM;UAClEC,IAAI,EAAED,KAAK,CAACE,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAAE;UACrCC,KAAK,EAAEJ,KAAK,CAACK,UAAU,CAAE;QAC3B,CAAC,CAAC,CAAC;;QAEH;QACArB,OAAO,CAAEsB,QAAQ,KAAM;UACrB,GAAGA,QAAQ;UACXnB,SAAS,EAAEM,aAAa;UACxBL,eAAe,EAAEW;QACnB,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDjB,kBAAkB,CAAC,CAAC;;IAEpB;IACAN,OAAO,CAAEsB,QAAQ,KAAM;MACrB,GAAGA,QAAQ;MACXrB,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAAE;MAC5CC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAE;IACxC,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAV,SAAS,CAAC,MAAM;IACd;IACA,MAAMiC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACzD,MAAMC,QAAQ,GAAGH,WAAW,CAACI,UAAU,CAAC,IAAI,CAAC;IAC7CD,QAAQ,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,WAAW,CAACM,KAAK,EAAEN,WAAW,CAACO,MAAM,CAAC;IAC/DC,YAAY,CAACL,QAAQ,EAAE7B,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACM,MAAM,EAAE,OAAO,CAAC;;IAExD;IACA,MAAM6B,YAAY,GAAGR,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAC3D,MAAMQ,SAAS,GAAGD,YAAY,CAACL,UAAU,CAAC,IAAI,CAAC;IAC/CM,SAAS,CAACL,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEI,YAAY,CAACH,KAAK,EAAEG,YAAY,CAACF,MAAM,CAAC;IAClEI,aAAa,CAACD,SAAS,EAAEpC,IAAI,CAACG,MAAM,EAAEH,IAAI,CAACM,MAAM,EAAE,QAAQ,CAAC;;IAE5D;IACA,MAAMgC,eAAe,GAAGX,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IACjE,MAAMW,YAAY,GAAGD,eAAe,CAACR,UAAU,CAAC,IAAI,CAAC;IACrDS,YAAY,CAACR,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEO,eAAe,CAACN,KAAK,EAAEM,eAAe,CAACL,MAAM,CAAC;IAC3EC,YAAY,CAACK,YAAY,EAAEvC,IAAI,CAACI,SAAS,EAAEJ,IAAI,CAACM,MAAM,EAAE,WAAW,CAAC;EACtE,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,MAAMkC,YAAY,GAAGA,CAACM,GAAG,EAAEC,OAAO,EAAEnC,MAAM,EAAEoC,KAAK,KAAK;IACpD,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGJ,OAAO,CAAC;IACnC,MAAMK,WAAW,GAAGN,GAAG,CAACO,MAAM,CAACf,KAAK;IACpC,MAAMgB,YAAY,GAAGR,GAAG,CAACO,MAAM,CAACd,MAAM;IACtC,MAAMgB,QAAQ,GAAGH,WAAW,GAAGL,OAAO,CAACS,MAAM,GAAG,EAAE;IAElDV,GAAG,CAACW,IAAI,GAAG,YAAY;IACvBX,GAAG,CAACY,SAAS,GAAG,MAAM;IACtBZ,GAAG,CAACa,SAAS,GAAG,QAAQ;IAExBZ,OAAO,CAACa,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAChC,MAAMC,SAAS,GAAIF,KAAK,GAAGZ,MAAM,IAAKK,YAAY,GAAG,EAAE,CAAC;MACxD,MAAMU,CAAC,GAAGF,KAAK,IAAIP,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE;MACtC,MAAMU,CAAC,GAAGX,YAAY,GAAGS,SAAS;MAElCjB,GAAG,CAACY,SAAS,GAAG,SAAS;MACzBZ,GAAG,CAACoB,QAAQ,CAACF,CAAC,EAAEC,CAAC,EAAEV,QAAQ,EAAEQ,SAAS,CAAC;MAEvCjB,GAAG,CAACY,SAAS,GAAG,MAAM;MACtBZ,GAAG,CAACqB,QAAQ,CAACN,KAAK,EAAEG,CAAC,GAAGT,QAAQ,GAAG,CAAC,EAAEU,CAAC,GAAG,EAAE,CAAC;MAC7CnB,GAAG,CAACqB,QAAQ,CAACvD,MAAM,CAACkD,KAAK,CAAC,EAAEE,CAAC,GAAGT,QAAQ,GAAG,CAAC,EAAED,YAAY,GAAG,EAAE,CAAC;IAClE,CAAC,CAAC;EACJ,CAAC;EAED,MAAMX,aAAa,GAAGA,CAACG,GAAG,EAAEC,OAAO,EAAEnC,MAAM,EAAEoC,KAAK,KAAK;IACrD,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGJ,OAAO,CAAC;IACnC,MAAMK,WAAW,GAAGN,GAAG,CAACO,MAAM,CAACf,KAAK;IACpC,MAAMgB,YAAY,GAAGR,GAAG,CAACO,MAAM,CAACd,MAAM;IACtC,MAAM6B,YAAY,GAAGhB,WAAW,IAAIL,OAAO,CAACS,MAAM,GAAG,CAAC,CAAC;IAEvDV,GAAG,CAACuB,SAAS,CAAC,CAAC;IACfvB,GAAG,CAACwB,WAAW,GAAG,SAAS;IAC3BxB,GAAG,CAACyB,SAAS,GAAG,CAAC;IAEjBxB,OAAO,CAACa,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAChC,MAAME,CAAC,GAAGF,KAAK,GAAGM,YAAY;MAC9B,MAAMH,CAAC,GAAGX,YAAY,GAAIO,KAAK,GAAGZ,MAAM,IAAKK,YAAY,GAAG,EAAE,CAAC;MAE/D,IAAIQ,KAAK,KAAK,CAAC,EAAE;QACfhB,GAAG,CAAC0B,MAAM,CAACR,CAAC,EAAEC,CAAC,CAAC;MAClB,CAAC,MAAM;QACLnB,GAAG,CAAC2B,MAAM,CAACT,CAAC,EAAEC,CAAC,CAAC;MAClB;IACF,CAAC,CAAC;IAEFnB,GAAG,CAAC4B,MAAM,CAAC,CAAC;IAEZ5B,GAAG,CAACY,SAAS,GAAG,MAAM;IACtBZ,GAAG,CAACa,SAAS,GAAG,QAAQ;IAExBZ,OAAO,CAACa,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAChC,MAAME,CAAC,GAAGF,KAAK,GAAGM,YAAY;MAC9B,MAAMH,CAAC,GAAGX,YAAY,GAAIO,KAAK,GAAGZ,MAAM,IAAKK,YAAY,GAAG,EAAE,CAAC;MAE/DR,GAAG,CAACuB,SAAS,CAAC,CAAC;MACfvB,GAAG,CAAC6B,GAAG,CAACX,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEf,IAAI,CAAC0B,EAAE,GAAG,CAAC,CAAC;MAChC9B,GAAG,CAACY,SAAS,GAAG,SAAS;MACzBZ,GAAG,CAAC+B,IAAI,CAAC,CAAC;MAEV/B,GAAG,CAACY,SAAS,GAAG,MAAM;MACtBZ,GAAG,CAACqB,QAAQ,CAACN,KAAK,EAAEG,CAAC,EAAEC,CAAC,GAAG,EAAE,CAAC;MAC9BnB,GAAG,CAACqB,QAAQ,CAACvD,MAAM,CAACkD,KAAK,CAAC,EAAEE,CAAC,EAAEV,YAAY,GAAG,EAAE,CAAC;IACnD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEnD,OAAA;IAAK2E,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,mBAAmB;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,eAE3F/E,OAAA;MAAI2E,KAAK,EAAE;QAAEnB,SAAS,EAAE,QAAQ;QAAEwB,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzF,CAAC;AAEV,CAAC;AAACnF,EAAA,CA5IID,cAAc;AAAAqF,EAAA,GAAdrF,cAAc;AA8IpB,eAAeA,cAAc;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}