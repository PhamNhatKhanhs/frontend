{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\baitaplon\\\\frontend\\\\src\\\\screens\\\\StoreScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProducts } from '../actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreScreen = () => {\n  _s();\n  const [priceRange, setPriceRange] = useState({\n    min: 0,\n    max: 20000000\n  });\n  const [sortOption, setSortOption] = useState({\n    field: '',\n    order: ''\n  });\n  const [selectedBrands, setSelectedBrands] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const productsPerPage = 8;\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    error,\n    products\n  } = productList;\n\n  // Memoized danh sách thương hiệu duy nhất\n  const brands = useMemo(() => [...new Set(products.map(product => product.brand))], [products]);\n  useEffect(() => {\n    dispatch(listProducts()); // Tải lại danh sách sản phẩm mỗi khi component load\n  }, [dispatch]);\n\n  // Sử dụng useEffect để cập nhật sản phẩm mỗi khi có sự thay đổi trong products (như thêm sản phẩm mới)\n  useEffect(() => {\n    // Nếu có thêm sản phẩm, có thể cập nhật lại state hoặc gọi lại API\n    dispatch(listProducts()); // Tải lại danh sách sản phẩm sau khi có sự thay đổi\n  }, [products, dispatch]); // Khi products thay đổi, sẽ gọi lại listProducts\n\n  // Lọc và sắp xếp sản phẩm\n  const filteredProducts = useMemo(() => {\n    const filtered = products.filter(product => product.price >= priceRange.min && product.price <= priceRange.max && (selectedBrands.length === 0 || selectedBrands.includes(product.brand))).sort((a, b) => b.createdAt.localeCompare(a.createdAt)) // Sắp xếp sản phẩm mới nhất trước\n    .sort((a, b) => {\n      if (sortOption.field === 'name') {\n        return sortOption.order === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\n      }\n      if (sortOption.field === 'price') {\n        return sortOption.order === 'asc' ? a.price - b.price : b.price - a.price;\n      }\n      return 0;\n    });\n    return filtered;\n  }, [products, priceRange, selectedBrands, sortOption]);\n\n  // Lấy sản phẩm trên trang hiện tại\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n  const handleSliderChange = e => {\n    setPriceRange({\n      ...priceRange,\n      max: parseInt(e.target.value, 10)\n    });\n  };\n  const handleSort = field => {\n    setSortOption(prev => ({\n      field,\n      order: prev.order === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n  const handleBrandToggle = brand => {\n    setSelectedBrands(prev => prev.includes(brand) ? prev.filter(b => b !== brand) : [...prev, brand]);\n  };\n  const resetFilters = () => {\n    setPriceRange({\n      min: 0,\n      max: 20000000\n    });\n    setSelectedBrands([]);\n    setSortOption({\n      field: '',\n      order: ''\n    });\n    setCurrentPage(1);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"store-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"store-sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"store-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-list\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this) : currentProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `page-btn ${page === currentPage ? 'active' : ''}`,\n          onClick: () => handlePageChange(page),\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreScreen, \"kaL17+u3ihMKELnaPR8Hy6NpJBY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = StoreScreen;\nexport default StoreScreen;\nvar _c;\n$RefreshReg$(_c, \"StoreScreen\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useDispatch","useSelector","Product","Loader","Message","listProducts","jsxDEV","_jsxDEV","StoreScreen","_s","priceRange","setPriceRange","min","max","sortOption","setSortOption","field","order","selectedBrands","setSelectedBrands","currentPage","setCurrentPage","productsPerPage","dispatch","productList","state","loading","error","products","brands","Set","map","product","brand","filteredProducts","filtered","filter","price","length","includes","sort","a","b","createdAt","localeCompare","name","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","handleSliderChange","e","parseInt","target","value","handleSort","prev","handleBrandToggle","resetFilters","handlePageChange","page","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","_id","Array","from","_","i","onClick","_c","$RefreshReg$"],"sources":["D:/Download/baitaplon/frontend/src/screens/StoreScreen.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst StoreScreen = () => {\r\n  const [priceRange, setPriceRange] = useState({ min: 0, max: 20000000 });\r\n  const [sortOption, setSortOption] = useState({ field: '', order: '' });\r\n  const [selectedBrands, setSelectedBrands] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const productsPerPage = 8;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  // Memoized danh sách thương hiệu duy nhất\r\n  const brands = useMemo(\r\n    () => [...new Set(products.map((product) => product.brand))],\r\n    [products]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts()); // Tải lại danh sách sản phẩm mỗi khi component load\r\n  }, [dispatch]);\r\n\r\n  // Sử dụng useEffect để cập nhật sản phẩm mỗi khi có sự thay đổi trong products (như thêm sản phẩm mới)\r\n  useEffect(() => {\r\n    // Nếu có thêm sản phẩm, có thể cập nhật lại state hoặc gọi lại API\r\n    dispatch(listProducts()); // Tải lại danh sách sản phẩm sau khi có sự thay đổi\r\n  }, [products, dispatch]); // Khi products thay đổi, sẽ gọi lại listProducts\r\n\r\n  // Lọc và sắp xếp sản phẩm\r\n  const filteredProducts = useMemo(() => {\r\n    const filtered = products\r\n      .filter(\r\n        (product) =>\r\n          product.price >= priceRange.min &&\r\n          product.price <= priceRange.max &&\r\n          (selectedBrands.length === 0 || selectedBrands.includes(product.brand))\r\n      )\r\n      .sort((a, b) => b.createdAt.localeCompare(a.createdAt)) // Sắp xếp sản phẩm mới nhất trước\r\n      .sort((a, b) => {\r\n        if (sortOption.field === 'name') {\r\n          return sortOption.order === 'asc'\r\n            ? a.name.localeCompare(b.name)\r\n            : b.name.localeCompare(a.name);\r\n        }\r\n        if (sortOption.field === 'price') {\r\n          return sortOption.order === 'asc' ? a.price - b.price : b.price - a.price;\r\n        }\r\n        return 0;\r\n      });\r\n    return filtered;\r\n  }, [products, priceRange, selectedBrands, sortOption]);\r\n\r\n  // Lấy sản phẩm trên trang hiện tại\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentProducts = filteredProducts.slice(\r\n    indexOfFirstProduct,\r\n    indexOfLastProduct\r\n  );\r\n\r\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n\r\n  const handleSliderChange = (e) => {\r\n    setPriceRange({ ...priceRange, max: parseInt(e.target.value, 10) });\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    setSortOption((prev) => ({\r\n      field,\r\n      order: prev.order === 'asc' ? 'desc' : 'asc',\r\n    }));\r\n  };\r\n\r\n  const handleBrandToggle = (brand) => {\r\n    setSelectedBrands((prev) =>\r\n      prev.includes(brand) ? prev.filter((b) => b !== brand) : [...prev, brand]\r\n    );\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setPriceRange({ min: 0, max: 20000000 });\r\n    setSelectedBrands([]);\r\n    setSortOption({ field: '', order: '' });\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"store-container\">\r\n      {/* Sidebar */}\r\n      <aside className=\"store-sidebar\">\r\n        {/* Các filter và UI khác */}\r\n      </aside>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"store-main\">\r\n        <div className=\"product-list\">\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant=\"danger\">{error}</Message>\r\n          ) : (\r\n            currentProducts.map((product) => (\r\n              <Product key={product._id} product={product} />\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        <div className=\"pagination\">\r\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n            <button\r\n              key={page}\r\n              className={`page-btn ${page === currentPage ? 'active' : ''}`}\r\n              onClick={() => handlePageChange(page)}\r\n            >\r\n              {page}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}