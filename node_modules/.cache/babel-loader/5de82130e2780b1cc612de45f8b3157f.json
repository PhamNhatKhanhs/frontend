{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      // Get item from the payload\n      const item = action.payload;\n\n      // Assign existItem to item.product if their prpduct ids match\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      // Check if item exists or Not\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n    case CART_REMOVE_ITEM:\n      // Filter out cart item id that does NOT match with payload\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload\n      };\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: []\n      };\n    // In any other case, just return the state\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"sources":["D:/Download/react-complete-e-commerce-main - Copy/frontend/src/reducers/cartReducers.js"],"sourcesContent":["import {\n\tCART_ADD_ITEM,\n\tCART_REMOVE_ITEM,\n\tCART_SAVE_SHIPPING_ADDRESS,\n\tCART_SAVE_PAYMENT_METHOD,\n\tCART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n\tstate = { cartItems: [], shippingAddress: {} },\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase CART_ADD_ITEM:\n\t\t\t// Get item from the payload\n\t\t\tconst item = action.payload\n\n\t\t\t// Assign existItem to item.product if their prpduct ids match\n\t\t\tconst existItem = state.cartItems.find((x) => x.product === item.product)\n\n\t\t\t// Check if item exists or Not\n\t\t\tif (existItem) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcartItems: state.cartItems.map((x) =>\n\t\t\t\t\t\tx.product === existItem.product ? item : x\n\t\t\t\t\t),\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcartItems: [...state.cartItems, item],\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase CART_REMOVE_ITEM:\n\t\t\t// Filter out cart item id that does NOT match with payload\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: state.cartItems.filter((x) => x.product !== action.payload),\n\t\t\t}\n\t\tcase CART_SAVE_SHIPPING_ADDRESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshippingAddress: action.payload,\n\t\t\t}\n\t\tcase CART_SAVE_PAYMENT_METHOD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpaymentMethod: action.payload,\n\t\t\t}\n\t\tcase CART_CLEAR_ITEMS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: [],\n\t\t\t}\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n"],"mappings":"AAAA,SACCA,aAAa,EACbC,gBAAgB,EAChBC,0BAA0B,EAC1BC,wBAAwB,EACxBC,gBAAgB,QACV,4BAA4B;AAEnC,OAAO,MAAMC,WAAW,GAAGA,CAC1BC,KAAK,GAAG;EAAEC,SAAS,EAAE,EAAE;EAAEC,eAAe,EAAE,CAAC;AAAE,CAAC,EAC9CC,MAAM,KACF;EACJ,QAAQA,MAAM,CAACC,IAAI;IAClB,KAAKV,aAAa;MACjB;MACA,MAAMW,IAAI,GAAGF,MAAM,CAACG,OAAO;;MAE3B;MACA,MAAMC,SAAS,GAAGP,KAAK,CAACC,SAAS,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKL,IAAI,CAACK,OAAO,CAAC;;MAEzE;MACA,IAAIH,SAAS,EAAE;QACd,OAAO;UACN,GAAGP,KAAK;UACRC,SAAS,EAAED,KAAK,CAACC,SAAS,CAACU,GAAG,CAAEF,CAAC,IAChCA,CAAC,CAACC,OAAO,KAAKH,SAAS,CAACG,OAAO,GAAGL,IAAI,GAAGI,CAC1C;QACD,CAAC;MACF,CAAC,MAAM;QACN,OAAO;UACN,GAAGT,KAAK;UACRC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAS,EAAEI,IAAI;QACrC,CAAC;MACF;IAED,KAAKV,gBAAgB;MACpB;MACA,OAAO;QACN,GAAGK,KAAK;QACRC,SAAS,EAAED,KAAK,CAACC,SAAS,CAACW,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKP,MAAM,CAACG,OAAO;MACtE,CAAC;IACF,KAAKV,0BAA0B;MAC9B,OAAO;QACN,GAAGI,KAAK;QACRE,eAAe,EAAEC,MAAM,CAACG;MACzB,CAAC;IACF,KAAKT,wBAAwB;MAC5B,OAAO;QACN,GAAGG,KAAK;QACRa,aAAa,EAAEV,MAAM,CAACG;MACvB,CAAC;IACF,KAAKR,gBAAgB;MACpB,OAAO;QACN,GAAGE,KAAK;QACRC,SAAS,EAAE;MACZ,CAAC;IACF;IACA;MACC,OAAOD,KAAK;EACd;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}