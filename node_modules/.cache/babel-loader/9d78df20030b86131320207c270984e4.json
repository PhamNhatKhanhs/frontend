{"ast":null,"code":"import{PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL,PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_FAIL,PRODUCT_DELETE_REQUEST,PRODUCT_DELETE_SUCCESS,PRODUCT_DELETE_FAIL,PRODUCT_CREATE_REQUEST,PRODUCT_CREATE_SUCCESS,PRODUCT_CREATE_FAIL,PRODUCT_CREATE_RESET,PRODUCT_UPDATE_REQUEST,PRODUCT_UPDATE_SUCCESS,PRODUCT_UPDATE_FAIL,PRODUCT_UPDATE_RESET,PRODUCT_CREATE_REVIEW_REQUEST,PRODUCT_CREATE_REVIEW_SUCCESS,PRODUCT_CREATE_REVIEW_FAIL,PRODUCT_CREATE_REVIEW_RESET,PRODUCT_TOP_REQUEST,PRODUCT_TOP_SUCCESS,PRODUCT_TOP_FAIL}from'../constants/productConstants';// productListReducer for all products\nexport const productListReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{products:[]};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){// Requests product list\n// products is an empty array because its still loading\n// loading will NOT be done yet, so true\ncase PRODUCT_LIST_REQUEST:return{loading:true,products:[]};// On success\n// products will contain data as a payload\n// loading will be done, so false\ncase PRODUCT_LIST_SUCCESS:return{loading:false,products:action.payload.products,pages:action.payload.pages,page:action.payload.page};// On fail\n// products will contain the error as a payload\n// loading will be done, so false\ncase PRODUCT_LIST_FAIL:return{loading:false,error:action.payload};// In any other case, just return the state\ndefault:return state;}};// productDetailsReducer for a single product\nexport const productDetailsReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{product:{reviews:[]}};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){// Requests a product\n// product is an empty object because its still loading\n// reviews is an empty array because its still loading\n// loading will NOT be done yet, so true\n// add contents of state using a spread operator (...)\ncase PRODUCT_DETAILS_REQUEST:return{loading:true,...state};// On success\n// product will contain data as a payload\n// loading will be done, so false\ncase PRODUCT_DETAILS_SUCCESS:return{loading:false,product:action.payload};// On fail\n// product will contain the error as a payload\n// loading will be done, so false\ncase PRODUCT_DETAILS_FAIL:return{loading:false,error:action.payload};// In any other case, just return the state\ndefault:return state;}};// productDeleteReducer for admin users\nexport const productDeleteReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){// loading will NOT be done yet, so true\ncase PRODUCT_DELETE_REQUEST:return{loading:true};// On success\n// loading will be done, so false\ncase PRODUCT_DELETE_SUCCESS:return{loading:false,success:true};// On fail\n// the error will contain the payload\n// loading will be done, so false\ncase PRODUCT_DELETE_FAIL:return{loading:false,error:action.payload};// In any other case, just return the state\ndefault:return state;}};// productCreateReducer for admin users\nexport const productCreateReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){// loading will NOT be done yet, so true\ncase PRODUCT_CREATE_REQUEST:return{loading:true};// On success\n// loading will be done, so false\ncase PRODUCT_CREATE_SUCCESS:return{loading:false,success:true,product:action.payload};// On fail\n// the error will contain the payload\n// loading will be done, so false\ncase PRODUCT_CREATE_FAIL:return{loading:false,error:action.payload};case PRODUCT_CREATE_RESET:return{};// In any other case, just return the state\ndefault:return state;}};// productUpdateReducer for admin users\nexport const productUpdateReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{product:{}};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){// loading will NOT be done yet, so true\ncase PRODUCT_UPDATE_REQUEST:return{loading:true};// On success\n// loading will be done, so false\ncase PRODUCT_UPDATE_SUCCESS:return{loading:false,success:true,product:action.payload};// On fail\n// the error will contain the payload\n// loading will be done, so false\ncase PRODUCT_UPDATE_FAIL:return{loading:false,error:action.payload};case PRODUCT_UPDATE_RESET:return{product:{}};// In any other case, just return the state\ndefault:return state;}};// productReviewCreateReducer for logged in users\nexport const productReviewCreateReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){// loading will NOT be done yet, so true\ncase PRODUCT_CREATE_REVIEW_REQUEST:return{loading:true};// On success\n// loading will be done, so false\ncase PRODUCT_CREATE_REVIEW_SUCCESS:return{loading:false,success:true};// On fail\n// the error will contain the payload\n// loading will be done, so false\ncase PRODUCT_CREATE_REVIEW_FAIL:return{loading:false,error:action.payload};case PRODUCT_CREATE_REVIEW_RESET:return{};// In any other case, just return the state\ndefault:return state;}};// productTopRatedReducer\nexport const productTopRatedReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{products:[]};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){// loading will NOT be done yet, so true\ncase PRODUCT_TOP_REQUEST:return{loading:true,products:[]};// On success\n// loading will be done, so false\ncase PRODUCT_TOP_SUCCESS:return{loading:false,products:action.payload};// On fail\n// the error will contain the payload\n// loading will be done, so false\ncase PRODUCT_TOP_FAIL:return{loading:false,error:action.payload};// In any other case, just return the state\ndefault:return state;}};","map":{"version":3,"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","productListReducer","state","arguments","length","undefined","products","action","type","loading","payload","pages","page","error","productDetailsReducer","product","reviews","productDeleteReducer","success","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer"],"sources":["D:/Download/baitaplon/frontend/src/reducers/productReducers.js"],"sourcesContent":["import {\n\tPRODUCT_LIST_REQUEST,\n\tPRODUCT_LIST_SUCCESS,\n\tPRODUCT_LIST_FAIL,\n\tPRODUCT_DETAILS_REQUEST,\n\tPRODUCT_DETAILS_SUCCESS,\n\tPRODUCT_DETAILS_FAIL,\n\tPRODUCT_DELETE_REQUEST,\n\tPRODUCT_DELETE_SUCCESS,\n\tPRODUCT_DELETE_FAIL,\n\tPRODUCT_CREATE_REQUEST,\n\tPRODUCT_CREATE_SUCCESS,\n\tPRODUCT_CREATE_FAIL,\n\tPRODUCT_CREATE_RESET,\n\tPRODUCT_UPDATE_REQUEST,\n\tPRODUCT_UPDATE_SUCCESS,\n\tPRODUCT_UPDATE_FAIL,\n\tPRODUCT_UPDATE_RESET,\n\tPRODUCT_CREATE_REVIEW_REQUEST,\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\n\tPRODUCT_CREATE_REVIEW_FAIL,\n\tPRODUCT_CREATE_REVIEW_RESET,\n\tPRODUCT_TOP_REQUEST,\n\tPRODUCT_TOP_SUCCESS,\n\tPRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n// productListReducer for all products\nexport const productListReducer = (state = { products: [] }, action) => {\n\tswitch (action.type) {\n\t\t// Requests product list\n\t\t// products is an empty array because its still loading\n\t\t// loading will NOT be done yet, so true\n\t\tcase PRODUCT_LIST_REQUEST:\n\t\t\treturn { loading: true, products: [] }\n\n\t\t// On success\n\t\t// products will contain data as a payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_LIST_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tproducts: action.payload.products,\n\t\t\t\tpages: action.payload.pages,\n\t\t\t\tpage: action.payload.page,\n\t\t\t}\n\n\t\t// On fail\n\t\t// products will contain the error as a payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_LIST_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n// productDetailsReducer for a single product\nexport const productDetailsReducer = (\n\tstate = { product: { reviews: [] } },\n\taction\n) => {\n\tswitch (action.type) {\n\t\t// Requests a product\n\t\t// product is an empty object because its still loading\n\t\t// reviews is an empty array because its still loading\n\t\t// loading will NOT be done yet, so true\n\t\t// add contents of state using a spread operator (...)\n\t\tcase PRODUCT_DETAILS_REQUEST:\n\t\t\treturn { loading: true, ...state }\n\n\t\t// On success\n\t\t// product will contain data as a payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_DETAILS_SUCCESS:\n\t\t\treturn { loading: false, product: action.payload }\n\n\t\t// On fail\n\t\t// product will contain the error as a payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_DETAILS_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// productDeleteReducer for admin users\nexport const productDeleteReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\t// loading will NOT be done yet, so true\n\t\tcase PRODUCT_DELETE_REQUEST:\n\t\t\treturn { loading: true }\n\n\t\t// On success\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_DELETE_SUCCESS:\n\t\t\treturn { loading: false, success: true }\n\n\t\t// On fail\n\t\t// the error will contain the payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_DELETE_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// productCreateReducer for admin users\nexport const productCreateReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\t// loading will NOT be done yet, so true\n\t\tcase PRODUCT_CREATE_REQUEST:\n\t\t\treturn { loading: true }\n\n\t\t// On success\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_CREATE_SUCCESS:\n\t\t\treturn { loading: false, success: true, product: action.payload }\n\n\t\t// On fail\n\t\t// the error will contain the payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_CREATE_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\n\t\tcase PRODUCT_CREATE_RESET:\n\t\t\treturn {}\n\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// productUpdateReducer for admin users\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n\tswitch (action.type) {\n\t\t// loading will NOT be done yet, so true\n\t\tcase PRODUCT_UPDATE_REQUEST:\n\t\t\treturn { loading: true }\n\n\t\t// On success\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_UPDATE_SUCCESS:\n\t\t\treturn { loading: false, success: true, product: action.payload }\n\n\t\t// On fail\n\t\t// the error will contain the payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_UPDATE_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\n\t\tcase PRODUCT_UPDATE_RESET:\n\t\t\treturn { product: {} }\n\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// productReviewCreateReducer for logged in users\nexport const productReviewCreateReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\t// loading will NOT be done yet, so true\n\t\tcase PRODUCT_CREATE_REVIEW_REQUEST:\n\t\t\treturn { loading: true }\n\n\t\t// On success\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_CREATE_REVIEW_SUCCESS:\n\t\t\treturn { loading: false, success: true }\n\n\t\t// On fail\n\t\t// the error will contain the payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_CREATE_REVIEW_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\n\t\tcase PRODUCT_CREATE_REVIEW_RESET:\n\t\t\treturn {}\n\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// productTopRatedReducer\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n\tswitch (action.type) {\n\t\t// loading will NOT be done yet, so true\n\t\tcase PRODUCT_TOP_REQUEST:\n\t\t\treturn { loading: true, products: [] }\n\n\t\t// On success\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_TOP_SUCCESS:\n\t\t\treturn { loading: false, products: action.payload }\n\n\t\t// On fail\n\t\t// the error will contain the payload\n\t\t// loading will be done, so false\n\t\tcase PRODUCT_TOP_FAIL:\n\t\t\treturn { loading: false, error: action.payload }\n\n\t\t// In any other case, just return the state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}